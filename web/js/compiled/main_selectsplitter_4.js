+function(e){'use strict';function r(r){return this.each(function(){var s=e(this),l=s.data('selectsplitter'),o='object'==typeof r&&r;(l||'destroy'!=r)&&(l||s.data('selectsplitter',l=new t(this,o)),'string'==typeof r&&l[r]())})};var t=function(e,t){this.init('selectsplitter',e,t)};t.DEFAULTS={template:'<div class="row" data-selectsplitter-wrapper-selector><div class="col-xs-12 col-sm-6"><select class="form-control" data-selectsplitter-firstselect-selector></select></div> <!-- Add the extra clearfix for only the required viewport --><div class="clearfix visible-xs-block"></div><div class="col-xs-12 col-sm-6"><select class="form-control" data-selectsplitter-secondselect-selector></select></div></div>'},t.prototype.init=function(l,n,d){var r=this;r.type=l,r.$element=e(n),r.$element.hide(),r.options=e.extend({},t.DEFAULTS,d),r.fullCategoryList={};var c=0,a=0;r.$element.find('optgroup').each(function(){r.fullCategoryList[e(this).attr('label')]={};var s=e(this),t=0,l={};e(this).find('option').each(function(){var r=e(this).attr('value'),s=e(this).text();l[e(this).index()]={x:r,y:s},t++}),t>a&&(a=t),r.fullCategoryList[s.attr('label')]=l,c++});var o='';for(var i in r.fullCategoryList)r.fullCategoryList.hasOwnProperty(i)&&(o=o+'<option>'+i+'</option>');r.$element.after(r.options.template),r.$wrapper=r.$element.next('div[data-selectsplitter-wrapper-selector]'),r.$firstSelect=e('select[data-selectsplitter-firstselect-selector]',r.$wrapper),r.$secondSelect=e('select[data-selectsplitter-secondselect-selector]',r.$wrapper);var s=Math.max(c,a,2);s=Math.min(s,10),r.$firstSelect.attr('size',s),r.$secondSelect.attr('size',s),r.$firstSelect.append(o),r.$firstSelect.on('change',e.proxy(r.updateParentCategory,r)),r.$secondSelect.on('change',e.proxy(r.updateChildCategory,r)),r.$selectedOption='',r.currentParentCategory='',r.currentChildCategory='',r.$element.find('option[selected=selected]').length&&(r.$selectedOption=r.$element.find('option[selected=selected]'),r.currentParentCategory=r.$selectedOption.closest('optgroup').attr('label'),r.currentChildCategory=r.$selectedOption.attr('value'),r.$firstSelect.find('option:contains('+r.currentParentCategory+')').attr('selected','selected'),r.$firstSelect.trigger('change'))},t.prototype.updateParentCategory=function(){var e=this;e.currentParentCategory=e.$firstSelect.val(),e.$secondSelect.empty();var r='';for(var t in e.fullCategoryList[e.currentParentCategory])e.fullCategoryList[e.currentParentCategory].hasOwnProperty(t)&&(r=r+'<option value="'+e.fullCategoryList[e.currentParentCategory][t].x+'">'+e.fullCategoryList[e.currentParentCategory][t].y+'</option>');e.$secondSelect.append(r),e.$selectedOption&&e.$secondSelect.find('option[value="'+e.$selectedOption.attr('value')+'"]').attr('selected','selected')},t.prototype.updateChildCategory=function(r){var t=this;t.currentChildCategory=e(r.target).val(),t.$element.find('option[selected=selected]').removeAttr('selected'),t.$element.find('option[value="'+t.currentChildCategory+'"]').attr('selected','selected'),t.$element.trigger('change'),t.$selectedOption=t.$element.find('option[selected=selected]')},t.prototype.destroy=function(){var e=this;e.$wrapper.remove(),e.$element.removeData(e.type),e.$element.show()},e.fn.selectsplitter=r,e.fn.selectsplitter.Constructor=t}(jQuery);