<?php

namespace NS\ScenesBundle\Repository;

/**
 * SceneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SceneRepository extends \Doctrine\ORM\EntityRepository
{
    public function getLatestScene($current, $nbre)
    {
        return $this->createQueryBuilder('s')
            ->where('s.isEnabled = :true')
            ->andWhere('s.id != :current')
            ->orderBy('s.createdAt')
            ->setParameter('true', true)
            ->setParameter('current', $current)
            ->setMaxResults($nbre)
            ->getQuery()
            ->getResult();

    }

    public function SceneCount($id)
    {
        $count=  $this->createQueryBuilder('s')
            ->join('s.storyline', 'st')
            ->addSelect('st')
            ->where('s.isEnabled = :true')
            ->andWhere('st.id = :storyline')
            ->orderBy('s.id', 'DESC')
            ->setParameter('true', true)
            ->setParameter('storyline', $id)
            ->setMaxResults(1)
            ->getQuery()
            ->getResult();

        if($count != null)
            return $count[0]->getCount() + 1;
        else
            return 1;



    }

    public function LastScene($id)
    {
        $count=  $this->createQueryBuilder('s')
            ->join('s.storyline', 'st')
            ->addSelect('st')
            ->where('s.isEnabled = :true')
            ->andWhere('st.id = :storyline')
            ->orderBy('s.id', 'DESC')
            ->setParameter('true', true)
            ->setParameter('storyline', $id)
            ->setMaxResults(1)
            ->getQuery()
            ->getResult();

       // dump($count[0]); exit;

        return $count;

    }

    public function NumberOfScenes()
    {
        $qb = $this->createQueryBuilder('u')
            ->select('count(u.id)');

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getScenesChart()
    {
        $sql = "SELECT count(id) as nbre, DATE(created_at) as date FROM scene GROUP BY created_at";
        $connexion = $this->_em->getConnection();
        $query = $connexion->prepare($sql);
        $query->execute();
        $result = $query->fetchAll();

        //dump($result); exit;

        return $result;



    }
}
